<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://madole.xyz/</id>
    <title>Madole.xyz Blog</title>
    <updated>2022-01-01T10:25:22.075Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <author>
        <name>Andrew McDowell</name>
        <email>me@madole.dev</email>
        <uri>https://madole.xyz/</uri>
    </author>
    <link rel="alternate" href="http://madole.xyz/"/>
    <link rel="self" href="https://madole.xyz/atom"/>
    <subtitle>Blog posts from madole.xyz</subtitle>
    <logo>http://madole.xyz/bitmoji.png</logo>
    <icon>http://madole.xyz/favicon.ico</icon>
    <rights>All rights reserved 2022, Madole</rights>
    <entry>
        <title type="html"><![CDATA[Are Gatsby and NextJS the same thing?]]></title>
        <id>https://madole.xyz/blog/are-gatsby-and-nextjs-the-same-thing</id>
        <link href="https://madole.xyz/blog/are-gatsby-and-nextjs-the-same-thing"/>
        <updated>2021-12-29T03:23:47.544Z</updated>
        <summary type="html"><![CDATA[Reading time: 6 min read]]></summary>
        <content type="html"><![CDATA[<h1 id="outline">Outline</h1>
<ul>
<li>What are they?</li>
<li>History of them both?</li>
<li>Features<ul>
<li>SSR</li>
<li>SSG</li>
<li>Serverless functions</li>
</ul>
</li>
<li>Differences</li>
<li>Why I chose Next over Gatsby?</li>
</ul>
<h2 id="what-are-they">What are they?</h2>
<h3 id="nextjs">Next.js</h3>
<blockquote>
<p>The React Framework for Production
Next.js gives you the best de</p>
</blockquote>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to model application flows in React with finite state machines and XState]]></title>
        <id>https://madole.xyz/blog/finite-state-machines-and-xstate</id>
        <link href="https://madole.xyz/blog/finite-state-machines-and-xstate"/>
        <updated>2021-07-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 10 min read]]></summary>
        <content type="html"><![CDATA[<p><em>(This was originally posted on the <a href="https://engineering.kablamo.com.au/posts/2021/finite-state-machines-and-xstate">Kablamo Engineering Blog</a>)</em></p>
<p>Application state in front-end clients is a complexity that is at best managed, and at worst the reason </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kablamo taps McDowell for geo-spatial expertise]]></title>
        <id>https://madole.xyz/blog/kablamo-taps-mcdowell-for-geo-spatial-expertise</id>
        <link href="https://madole.xyz/blog/kablamo-taps-mcdowell-for-geo-spatial-expertise"/>
        <updated>2021-03-14T11:52:36.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>I got interviewed about joining Kablamo, you can read it here <a href="https://www.itwire.com/people-moves/kablamo-taps-mcdowell-for-geo-spatial-expertise.html">https://www.itwire.com/people-moves/kablamo-taps-mcdowell-for-geo-spatial-expertise.html</a> </p>
<p>![H</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Analysing codebase metadata to make refactoring more impactful]]></title>
        <id>https://madole.xyz/blog/analysing-codebase-metadata-to-make-refactoring-more-impactful</id>
        <link href="https://madole.xyz/blog/analysing-codebase-metadata-to-make-refactoring-more-impactful"/>
        <updated>2020-11-11T23:31:20.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<p>Let&#39;s say you&#39;ve inherited a codebase that is in a bit of a dire state. The business wants to continue to add features to this codebase for the next X years. You attempt to write some code to implement a feature. In doing so, you introduce 4 bugs due</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building Software is much like buying a house]]></title>
        <id>https://madole.xyz/blog/building-software-is-much-like-buying-a-house</id>
        <link href="https://madole.xyz/blog/building-software-is-much-like-buying-a-house"/>
        <updated>2020-10-20T23:18:57.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p><strong>Warning:</strong> This is a stream of consiousness. It is a hot-take that is not meant to fit every case. </p>
<p>When buying a house, if you&#39;ve got time, you&#39;ll shop around to get a good rate on your mortgage, if you&#39;re in a rush, you&#39;ll take a bad mortgage </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Upgrading an old Flow codebase]]></title>
        <id>https://madole.xyz/blog/upgrading-an-old-flow-codebase</id>
        <link href="https://madole.xyz/blog/upgrading-an-old-flow-codebase"/>
        <updated>2020-10-20T01:11:34.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>We&#39;ve been gradually migrating our codebases from Flow to Typescript but sometimes we have to upgrade an old Flow codebase to a newer version of Flow. </p>
<p>We&#39;ve got many old codebases and some are more than 50 Flow versions behind. Flow has been active</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cutting our Codeship Pro CI build time in half]]></title>
        <id>https://madole.xyz/blog/cutting-our-codeship-pro-ci-build-time-in-half</id>
        <link href="https://madole.xyz/blog/cutting-our-codeship-pro-ci-build-time-in-half"/>
        <updated>2020-09-25T05:54:05.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<p>We have noticed recently our Codeship Pro builds have been taking a very long time. Upwards of 20minutes to get through all our steps.</p>
<p>We lived with this for a while, but as we started to put more strict conditions around what checks need to pass </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meet the team - Andrew McDowell]]></title>
        <id>https://madole.xyz/blog/meet-the-team</id>
        <link href="https://madole.xyz/blog/meet-the-team"/>
        <updated>2019-12-01T01:15:33.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 1 min read]]></summary>
        <content type="html"><![CDATA[<p>import MeetTheTeamBackup from &quot;../../components/mdx/MeetTheTeamBackup&quot;;</p>
<p>I got interviewed for work, you can see it
here [<a href="https://www.propelleraero.com/blog/meet-your-engineering-team-andrew-mcdowell/%5D">https://www.propelleraero.com/blog/meet-your-engineering-team-andrew-mcdowell/]</a>(<a href="https://www.propelleraero.com/blog/meet-your-eng">https://www.propelleraero.com/blog/meet-your-eng</a></p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting organised in work]]></title>
        <id>https://madole.xyz/blog/getting-organised-in-work</id>
        <link href="https://madole.xyz/blog/getting-organised-in-work"/>
        <updated>2019-11-04T07:12:35.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 5 min read]]></summary>
        <content type="html"><![CDATA[<p>Since taking on a leadership role, I’ve had to <strong>get organised.</strong></p>
<p>Being a developer for most of my career, I’ve been able to get my head down and attend minimal meetings. Those which I did attend were always organised for me.</p>
<p>Now I’m facilitating d</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lessons from creating a component library]]></title>
        <id>https://madole.xyz/blog/lessons-from-creating-a-component-library</id>
        <link href="https://madole.xyz/blog/lessons-from-creating-a-component-library"/>
        <updated>2019-09-23T21:58:40.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 4 min read]]></summary>
        <content type="html"><![CDATA[<p>If you work in a place that has lots of separate apps that all need a consistent look, creating a shared component library is a good idea. This allows you to pull in components as packages and use them throughout the different projects to maintain a </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Debugging minified code]]></title>
        <id>https://madole.xyz/blog/debugging-minified-code</id>
        <link href="https://madole.xyz/blog/debugging-minified-code"/>
        <updated>2019-09-12T11:00:34.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 4 min read]]></summary>
        <content type="html"><![CDATA[<p>As developers, we tend to like to optimise our processes, including debugging issues. </p>
<p>In the front-end development world, its possible to ship an asset called a sourcemap along with your bundled, mangled and minified code. </p>
<p>This asset helps map ou</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A day in the life of ]]></title>
        <id>https://madole.xyz/blog/a-day-in-the-life-of</id>
        <link href="https://madole.xyz/blog/a-day-in-the-life-of"/>
        <updated>2019-09-11T17:45:00.344Z</updated>
        <summary type="html"><![CDATA[Reading time: 4 min read]]></summary>
        <content type="html"><![CDATA[<p>My good friend Chris Laughlin over at <a href="https://www.thedyslexicdeveloper.com">https://www.thedyslexicdeveloper.com</a> put out a call for what his next blog post should be, I asked him for a run down of his typical day as we have similar titles, but I wa</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unexpected promise in the bagging area]]></title>
        <id>https://madole.xyz/blog/unexpected-promise-in-the-bagging-area</id>
        <link href="https://madole.xyz/blog/unexpected-promise-in-the-bagging-area"/>
        <updated>2019-08-27T07:34:00.344Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>This week I came across an odd behaviour that it took me a little while to figure out. 
Take the following example:</p>
<p>```js
const promiseThatWillResolve = Promise.resolve();
const promiseThatWillReject = new Promise((resolve, reject) =&gt; reject(new Err</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I approach an algorithmic code challenge]]></title>
        <id>https://madole.xyz/blog/how-i-approach-an-algorithmic-code-challenge</id>
        <link href="https://madole.xyz/blog/how-i-approach-an-algorithmic-code-challenge"/>
        <updated>2019-07-12T05:59:56.344Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<p>I approach different challenges in different ways. If it’s algorithmic, I’ll usually get the whiteboard out or if I’m not near a whiteboard, my iPad Pro is a good alternative. Before I put pen to <del>paper</del> whiteboard, I’ll do the necessary background</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to download an image to file on disk when scraping a website]]></title>
        <id>https://madole.xyz/blog/how-to-download-an-image-to-file-on-disk-when-scraping-a-website</id>
        <link href="https://madole.xyz/blog/how-to-download-an-image-to-file-on-disk-when-scraping-a-website"/>
        <updated>2019-02-07T07:59:56.344Z</updated>
        <summary type="html"><![CDATA[Reading time: 1 min read]]></summary>
        <content type="html"><![CDATA[<p>Recently I was recovering data from one of my websites that had been unceremoniously taken down while I was on holidays when I got stomped for a little while on how to scrape an image and save it to file using NodeJS.</p>
<p>Let’s say you are using puppete</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Async/Await to batch asynchronous requests]]></title>
        <id>https://madole.xyz/blog/batching-with-async-await</id>
        <link href="https://madole.xyz/blog/batching-with-async-await"/>
        <updated>2018-06-24T10:28:07.097Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>Lets say you have written a file uploader app and your users might upload 100s of files at a time. You could just loop the files and send off a request per file. This might overload your server, interrupt downloads or just fail due to hitting a maxim</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Migrating data from Ghost to GatsbyJS]]></title>
        <id>https://madole.xyz/blog/migrating-data-from-ghost-to-gatsby</id>
        <link href="https://madole.xyz/blog/migrating-data-from-ghost-to-gatsby"/>
        <updated>2018-06-18T10:28:07.097Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<h2 id="what-is-gatsby">What is Gatsby?</h2>
<blockquote>
<p>🔥 Blazing-fast static site generator for React</p>
</blockquote>
<p>It&#39;s is perfect for a static blog, it reads markdown and gives you a GraphQL API to query it and a React front end.</p>
<p>Coupled with <a href="https://www.netlify.com/">https://www.netlify.com/</a>, it is a fantastic solut</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building node-canvas in Amazon Linux AMI for Lambdas]]></title>
        <id>https://madole.xyz/blog/building-node-canvas-in-amazon-linux-ami-for-lambdas</id>
        <link href="https://madole.xyz/blog/building-node-canvas-in-amazon-linux-ami-for-lambdas"/>
        <updated>2017-10-08T18:06:13.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>Building node-canvas for use inside an AWS Lambda is tricky as it requires some dependencies to be built by node-gyp against the target architecture. If you build these dependencies locally before deploying your lambda, they&#39;ll be built on against yo</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a Raspberry Pi internet speed checker with NodeJS and GoogleDocs]]></title>
        <id>https://madole.xyz/blog/building-a-raspberrypi-internet-speed-checker-with-nodejs-and-googledocs</id>
        <link href="https://madole.xyz/blog/building-a-raspberrypi-internet-speed-checker-with-nodejs-and-googledocs"/>
        <updated>2017-03-18T16:25:23.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 4 min read]]></summary>
        <content type="html"><![CDATA[<p>I frequently experience periods of internet drop outs and wanted to build something to monitor my internet without any manual intervention. I wanted this to create an automated report for me so I could then email it off to my ISP and complain.</p>
<p>So I </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Whitelisting multiple domains with kcors in Koa]]></title>
        <id>https://madole.xyz/blog/whitelisting-multiple-domains-with-kcors-in-koa</id>
        <link href="https://madole.xyz/blog/whitelisting-multiple-domains-with-kcors-in-koa"/>
        <updated>2017-02-17T12:16:22.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<p>import RedText from &#39;../../components/mdx/RedText&#39;;</p>
<h1 id="kcors"><a href="https://www.npmjs.com/package/kcors">Kcors</a></h1>
<p>The Koa CORs library <code>kcors</code> has documentation which is a bit light on how to actually whitelist more than one domain for your node server.</p>
<p>It has a</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mocking relative dependencies in Jest with jest.mock()]]></title>
        <id>https://madole.xyz/blog/mocking-relative-dependencies-in-jest-with-jest-mock</id>
        <link href="https://madole.xyz/blog/mocking-relative-dependencies-in-jest-with-jest-mock"/>
        <updated>2016-12-07T15:31:07.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>If you&#39;re like me and have just entered the world of Jest for testing your React application. You might be familiar with a mocking library called Proxyquire.</p>
<p><strong>Proxyquire -</strong> _&quot;nodejs require in order to allow overriding dependencies during testing.</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Putting Yarn Package Manager to the test]]></title>
        <id>https://madole.xyz/blog/yarn-package-manager</id>
        <link href="https://madole.xyz/blog/yarn-package-manager"/>
        <updated>2016-11-22T17:26:37.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<h3 id="what-is-yarn">What is Yarn?</h3>
<blockquote>
<p>FAST, RELIABLE, AND SECURE DEPENDENCY MANAGEMENT. - <a href="https://yarnpkg.com/">https://yarnpkg.com/</a></p>
</blockquote>
<h3 id="how-does-it-achieve-all-of-this">How does it achieve all of this?</h3>
<p>It uses caching to speed up installs by only ever downloading them once and parallelizes ope</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My favourite VSCode plugins]]></title>
        <id>https://madole.xyz/blog/my-favourite-vscode-plugins</id>
        <link href="https://madole.xyz/blog/my-favourite-vscode-plugins"/>
        <updated>2016-11-06T14:35:03.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 7 min read]]></summary>
        <content type="html"><![CDATA[<p>A while ago I published a comprehensive list of my favourite Atom Editor plugins, I&#39;ve since moved to VSCode for the majority of my development so I thought I&#39;d gather together a similar list for it.</p>
<hr>
<p>###[Auto-close-tag](<a href="https://marketplace.vi">https://marketplace.vi</a></p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Webpack-dev-server: Where does your CSS go?]]></title>
        <id>https://madole.xyz/blog/webpack-dev-server-where-does-your-css-go</id>
        <link href="https://madole.xyz/blog/webpack-dev-server-where-does-your-css-go"/>
        <updated>2016-09-14T16:29:10.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 1 min read]]></summary>
        <content type="html"><![CDATA[<p>You might have noticed when using webpack-dev-server that the CSS seems to appear on the page as if by magic. If you have a look at the build <a href="https://www.npmjs.com/package/webpack-manifest-plugin">manifest</a>, you&#39;ll see your <code>main.js</code> file listed but</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serverside CSS Modules with babel]]></title>
        <id>https://madole.xyz/blog/serverside-css-modules-with-babel</id>
        <link href="https://madole.xyz/blog/serverside-css-modules-with-babel"/>
        <updated>2016-08-21T21:09:38.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>I had a requirement to use CSS modules with serverside rendering, it took me a while to figure out so I thought I&#39;d write the process down.</p>
<p>In order to set css modules, we need babel to turn our generic classnames (<code>.container</code>) into localised class</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[babel-loader's hidden feature - babelrc:false]]></title>
        <id>https://madole.xyz/blog/babel-loaders-hidden-feature-babelrc-false</id>
        <link href="https://madole.xyz/blog/babel-loaders-hidden-feature-babelrc-false"/>
        <updated>2016-08-21T19:59:31.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>I&#39;ve spent 3 days configuring Webpack and babel to deal with CSS Modules while doing server-side rendering. I&#39;ve just discovered an undocumented setting in Webpack&#39;s babel-loader that solves the mystery of disappearing css.</p>
<p>On the server, I&#39;ve got</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NPM uses your .gitignore file]]></title>
        <id>https://madole.xyz/blog/npm-uses-your-gitignore-file</id>
        <link href="https://madole.xyz/blog/npm-uses-your-gitignore-file"/>
        <updated>2016-07-03T02:59:42.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>###The Problem</p>
<p>I recently published a package to npm and got an issue raised on Github to tell me that the build artifact hadn&#39;t been published.</p>
<p>The helpful person who raised the issue informed me that in the absence of an <code>.npmignore</code> file, npm </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using console.time to profile performance in your node application]]></title>
        <id>https://madole.xyz/blog/using-console-time-to-profile-performance-in-your-node-app</id>
        <link href="https://madole.xyz/blog/using-console-time-to-profile-performance-in-your-node-app"/>
        <updated>2016-06-09T15:27:36.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<p>I was writing an express application, when I started to notice one of the routes was taking quite a while to respond to a request. The route was doing some heavy lifting shaping data from an API .</p>
<p>I needed to figure out where the bottleneck was an</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Error handling in Express with Async/Await routes]]></title>
        <id>https://madole.xyz/blog/error-handling-in-express-with-async-await-routes</id>
        <link href="https://madole.xyz/blog/error-handling-in-express-with-async-await-routes"/>
        <updated>2016-05-25T03:01:50.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><em>Async/Await for me is one of the best things to not quite happen to JavaScript yet.</em></p>
</blockquote>
<p>As we all know from Object.observe, you&#39;re never really sure what&#39;s going to end up in a language until it actually lands.</p>
<p>But I&#39;ve been transpiling async/awa</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[babel-plugin-transform-async-to-module-method gotcha]]></title>
        <id>https://madole.xyz/blog/babel-plugin-transform-async-to-module-method-gotcha</id>
        <link href="https://madole.xyz/blog/babel-plugin-transform-async-to-module-method-gotcha"/>
        <updated>2016-05-08T02:41:11.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>We have been using ES7 Async/Await with <code>babel-plugin-transform-async-to-module-method</code> and bluebird co-routines for about a month now.</p>
<p>This has been working great for us in most cases.</p>
<p>Although we started noticing an issue when we&#39;ve been using </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Asset hashing with webpack]]></title>
        <id>https://madole.xyz/blog/asset-hashing-with-webpack</id>
        <link href="https://madole.xyz/blog/asset-hashing-with-webpack"/>
        <updated>2016-04-15T14:32:57.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 5 min read]]></summary>
        <content type="html"><![CDATA[<h3 id="why-would-you-hash-your-assets">Why would you hash your assets?</h3>
<p>If you&#39;re creating a website that has a caching layer sitting in front of it, you&#39;re going to need a way to bust the cache every time you make a release so your cache doesn&#39;t continue to serve up your old files.</p>
<h1 id=""></h1>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using webpack to set up polyfills in your site]]></title>
        <id>https://madole.xyz/blog/using-webpack-to-set-up-polyfills-in-your-site</id>
        <link href="https://madole.xyz/blog/using-webpack-to-set-up-polyfills-in-your-site"/>
        <updated>2016-04-03T21:40:03.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<p>Webpack&#39;s Provide Plugin allows you to set up variables that get injected into your code when they are used in your codebase.</p>
<p>This means that if I want to polyfill the new ES6 native promise for older browsers, I can do it at build time.</p>
<p>Two poly</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing a Gulpfile in ES6]]></title>
        <id>https://madole.xyz/blog/writing-a-gulpfile-in-es6</id>
        <link href="https://madole.xyz/blog/writing-a-gulpfile-in-es6"/>
        <updated>2016-03-30T15:36:06.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 1 min read]]></summary>
        <content type="html"><![CDATA[<p>So you&#39;ve written your app in ES6 and you&#39;re using babel to transpile to ES5.</p>
<p>But your build process uses Gulp and it requires you to write your Gulpfile in ES5 meaning you can&#39;t take advantage of all the latest JavaScript features you&#39;re using else</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ASYNC/AWAIT ES7]]></title>
        <id>https://madole.xyz/blog/async-await-es7</id>
        <link href="https://madole.xyz/blog/async-await-es7"/>
        <updated>2016-03-12T21:56:32.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 4 min read]]></summary>
        <content type="html"><![CDATA[<p>Async/Await is a JavaScript ES7/ES2016 language feature that allows you to write asynchronous code that looks synchronous.</p>
<p>This feature has been available in other languages like C# and Visual Basic for a while.</p>
<p>It allows you to write your functi</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My favourite Atom packages of 2015]]></title>
        <id>https://madole.xyz/blog/my-favourite-atom-packages-of-2015</id>
        <link href="https://madole.xyz/blog/my-favourite-atom-packages-of-2015"/>
        <updated>2016-01-02T06:29:19.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<h4 id="a-comprehensive-list-of-my-favourite-atom-packages-from-2015">A comprehensive list of my favourite Atom packages from 2015</h4>
<h3 id="ask-stack"><a href="https://github.com/Chris911/Ask-Stack-Atom.git">ask-stack</a></h3>
<p>Quickly get answers and code samples from Stack Overflow in Atom</p>
<h3 id="ask-stackhttpscamogithubusercontentco">![ask-stack](<a href="https://camo.githubusercontent.co">https://camo.githubusercontent.co</a></h3>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Semver - the sane way]]></title>
        <id>https://madole.xyz/blog/semver-the-sane-way</id>
        <link href="https://madole.xyz/blog/semver-the-sane-way"/>
        <updated>2015-11-07T13:05:03.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 4 min read]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><strong>Semantic Versioning 2.0.0</strong> - <a href="https://semver.org">https://semver.org</a></p>
<p><em>Summary</em></p>
<p>Given a version number MAJOR.MINOR.PATCH, increment the:</p>
<p>MAJOR version when you make incompatible API changes,</p>
<p>MINOR version when you add functionality in a backwards-comp</p>
</blockquote>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting up webpack dev middleware in express]]></title>
        <id>https://madole.xyz/blog/setting-up-webpack-dev-middleware-in-express</id>
        <link href="https://madole.xyz/blog/setting-up-webpack-dev-middleware-in-express"/>
        <updated>2015-11-07T13:04:33.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 3 min read]]></summary>
        <content type="html"><![CDATA[<p>[[[ <strong>THIS BLOG POST IS 2 YEARS OLD, CHECK OUT <a href="https://webpack.js.org">WEBPACK2</a> INSTEAD</strong> ]]]</p>
<p><strong>What is webpack dev server?</strong></p>
<p>Webpack dev server is a live reloading server for webpack.</p>
<p><strong>What is webpack dev middleware?</strong></p>
<p>It&#39;s a simple wrapper</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WhatsApp sharing from the mobile browser]]></title>
        <id>https://madole.xyz/blog/whatsapp-sharing-from-the-mobile-browser</id>
        <link href="https://madole.xyz/blog/whatsapp-sharing-from-the-mobile-browser"/>
        <updated>2015-11-07T13:03:16.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>####BuzzFeed Says:</p>
<blockquote>
<p>iPhone users are clicking their new WhatsApp button more than Twitter&#39;s. This was enough for us to build a WhatsApp sharing button generator, so you can easily create your own.</p>
</blockquote>
<p>They have a built a button generator, for you to ge</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Selenium ActionSequence]]></title>
        <id>https://madole.xyz/blog/selenium-actionsequence</id>
        <link href="https://madole.xyz/blog/selenium-actionsequence"/>
        <updated>2015-11-07T12:34:54.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<h2 id="how-to-click-outside-the-center-of-a-div-in-a-selenium-test">How to click outside the center of a div in a selenium test</h2>
<h3 id="selenium-test">Selenium test</h3>
<p>Should do something when an outer div, with an inner div placed in the middle in front, is clicked.</p>
<h3 id="how-to-usually-do-this">How to usually do this?</h3>
<p>```javascript</p>
<p>driver.findElement(web</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JsFiddle - Firebug lite]]></title>
        <id>https://madole.xyz/blog/jsfiddle-firebug-lite</id>
        <link href="https://madole.xyz/blog/jsfiddle-firebug-lite"/>
        <updated>2015-11-07T12:31:46.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>I recently discovered a cool feature in JSFiddle which changed the way I use it.</p>
<p>Until now, I&#39;ve been hopping on to JSFiddle to test out little bits of code and logging out to the console.</p>
<p>If you&#39;re like me, you&#39;ll be familiar with having Chrome De</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Some useful everyday linux commands]]></title>
        <id>https://madole.xyz/blog/some-useful-l</id>
        <link href="https://madole.xyz/blog/some-useful-l"/>
        <updated>2015-11-07T12:22:16.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>I decided to write down a list of every day commands that I use in the the Bash command line in Linux.
This is by no means a definitive list and it will grow as I remember or come across commands that make
my life easier</p>
<h3 id="ls">ls</h3>
<ul>
<li><pre><code>  list informa
</code></pre>
</li>
</ul>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating SVG animation with WalkwayJS]]></title>
        <id>https://madole.xyz/blog/creating-svg-animation-with-walkwayjs</id>
        <link href="https://madole.xyz/blog/creating-svg-animation-with-walkwayjs"/>
        <updated>2015-11-01T01:01:07.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 2 min read]]></summary>
        <content type="html"><![CDATA[<p>A few days ago this link (<a href="https://www.connoratherton.com/walkway">https://www.connoratherton.com/walkway</a>) popped up on Reddit’s <a href="https://reddit.com/r/javascript">/r/javascript</a>.</p>
<p>I liked how it looked so I set about having a go. Turns out Connor Atherton’s library has made this super easy </p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript Interview Questions]]></title>
        <id>https://madole.xyz/blog/javascript-interview-questions</id>
        <link href="https://madole.xyz/blog/javascript-interview-questions"/>
        <updated>2015-11-01T00:29:11.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 11 min read]]></summary>
        <content type="html"><![CDATA[<p>I was asked recently by a friend of mine to come up with a list of interview questions that you can get asked during
a Javascript interview. I looked by to my last interview and came up with a few topics for him to brush up on.
I thought I&#39;d write th</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript Toolbox]]></title>
        <id>https://madole.xyz/blog/javascript-toolbox</id>
        <link href="https://madole.xyz/blog/javascript-toolbox"/>
        <updated>2015-11-01T00:27:54.000Z</updated>
        <summary type="html"><![CDATA[Reading time: 6 min read]]></summary>
        <content type="html"><![CDATA[<p>I write Javascript most days and have done so for a few years now. I still find new tools, websites, frameworks and
ways to do things. I thought I&#39;d write them down and get the list online as it may help other people discover some
useful tools of the</p>
]]></content>
        <author>
            <name>Andrew McDowell</name>
            <email>me@madole.dev</email>
            <uri>https://madole.xyz</uri>
        </author>
    </entry>
</feed>